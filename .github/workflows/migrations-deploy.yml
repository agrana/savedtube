name: Deploy Supabase migrations

on:
  push:
    branches: [ main ]      # auto-deploy to staging on merge
  workflow_dispatch:
    inputs:
      target:
        description: "Target environment"
        type: choice
        required: true
        options: [staging, production]
        default: staging
  release:
    types: [published]       # deploy to prod on release

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Use GitHub Environments for manual approval on production
    environment: ${{ inputs.target == 'production' || github.event_name == 'release' && 'production' || 'staging' }}

    env:
      DB_URL: ${{ inputs.target == 'production' && secrets.SUPABASE_DB_URL_PROD || secrets.SUPABASE_DB_URL_STAGING }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # if triggered by release, force production
      - name: Set DB_URL for release events
        if: ${{ github.event_name == 'release' }}
        run: echo "DB_URL=${{ secrets.SUPABASE_DB_URL_PROD }}" >> $GITHUB_ENV

      - name: Safety check: show target
        run: |
          echo "Deploying migrations to: ${{ env.DB_URL }}"
          # Redact URL for logs
          echo "Host: $(echo '${{ env.DB_URL }}' | sed -E 's#postgresql://[^@]+@([^:/]+).*#\\1#')"

      - name: Push migrations
        run: supabase db push --db-url "${DB_URL}"
